{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kolaf\\\\Documents\\\\PROJECTS\\\\chess-website-main\\\\src\\\\components\\\\Header\\\\Header.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Slide, useScrollTrigger, Typography, AppBar, Toolbar, IconButton, Button, Hidden, Drawer, Menu, makeStyles, Link, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  header: {\n    backgroundColor: '#f03e3e',\n    'border-bottom': '4px solid #ffffff'\n  },\n  logo: {\n    fontFamily: \"Satisfy, sans-serif\",\n    fontWeight: 600,\n    color: '#ffffff',\n    textAlign: 'left'\n  },\n  menuButton: {\n    fontWeight: 400,\n    color: '#ffffff',\n    marginLeft: '10px'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\nconst headersData = [{\n  label: 'Home',\n  href: '\\/'\n}, {\n  label: 'Announcements',\n  href: '\\Announcements'\n}, {\n  label: 'Leaderboard',\n  href: '\\Leaderboard'\n}, {\n  label: 'Rules',\n  href: '\\Rules'\n}];\nexport default function Header() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    header,\n    logo,\n    menuButton,\n    toolbar\n  } = useStyles();\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false\n  });\n  const {\n    mobileView,\n    drawerOpen\n  } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900 ? setState(prevState => ({ ...prevState,\n        mobileView: true\n      })) : setState(prevState => ({ ...prevState,\n        mobileView: false\n      }));\n    };\n\n    setResponsiveness();\n    window.addEventListener('resize', () => setResponsiveness());\n  }, []);\n\n  const displayDesktop = () => {\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: toolbar,\n      children: [tdsbLogo, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getMenuButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () => setState(prevState => ({ ...prevState,\n      drawerOpen: true\n    }));\n\n    const handleDrawerClose = () => setState(prevState => ({ ...prevState,\n      drawerOpen: false\n    }));\n\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        edge: 'start',\n        color: 'inherit',\n        'aria-label': 'menu',\n        'aria-haspopup': 'true',\n        onClick: handleDrawerOpen,\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: 'left',\n        open: drawerOpen,\n        onClose: handleDrawerClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getDrawerChoices()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tdsbLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getDrawerChoices = () => {\n    return headersData.map(({\n      label,\n      href\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        component: RouterLink,\n        to: href,\n        color: \"inherit\",\n        style: {\n          textDecoration: \"none\"\n        },\n        key: label,\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const tdsbLogo = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    className: logo,\n    children: \"TDSB Chess Showdown\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n\n  const getMenuButtons = () => {\n    return headersData.map(({\n      label,\n      href\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        key: label,\n        color: 'inherit',\n        to: href,\n        component: RouterLink,\n        className: menuButton,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const HideOnScroll = ({\n    children\n  }) => {\n    _s();\n\n    const trigger = useScrollTrigger();\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      appear: false,\n      direction: \"down\",\n      in: !trigger,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(HideOnScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n    return [useScrollTrigger];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(HideOnScroll, {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        className: header,\n        children: mobileView ? displayMobile() : displayDesktop()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Header, \"UTBoECEkt9XwrH48MubmNbhjQ/U=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Kolaf/Documents/PROJECTS/chess-website-main/src/components/Header/Header.js"],"names":["React","useEffect","useState","Slide","useScrollTrigger","Typography","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","makeStyles","Link","MenuItem","MenuIcon","RouterLink","useStyles","header","backgroundColor","logo","fontFamily","fontWeight","color","textAlign","menuButton","marginLeft","toolbar","display","justifyContent","headersData","label","href","Header","state","setState","mobileView","drawerOpen","setResponsiveness","window","innerWidth","prevState","addEventListener","displayDesktop","tdsbLogo","getMenuButtons","displayMobile","handleDrawerOpen","handleDrawerClose","edge","onClick","anchor","open","onClose","getDrawerChoices","map","component","to","style","textDecoration","key","className","HideOnScroll","children","trigger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,EAAgBC,gBAAhB,EAAkCC,UAAlC,EAA8CC,MAA9C,EAAsDC,OAAtD,EAA+DC,UAA/D,EAA2EC,MAA3E,EAAmFC,MAAnF,EAA2FC,MAA3F,EAAmGC,IAAnG,EAAyGC,UAAzG,EAAqHC,IAArH,EAA2HC,QAA3H,QAA2I,mBAA3I;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASF,IAAI,IAAIG,UAAjB,QAAmC,kBAAnC;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,OAAO;AAChCM,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJ,qBAAiB;AAFb,GADwB;AAMhCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,qBADV;AAEFC,IAAAA,UAAU,EAAE,GAFV;AAGFC,IAAAA,KAAK,EAAE,SAHL;AAIFC,IAAAA,SAAS,EAAE;AAJT,GAN0B;AAYhCC,EAAAA,UAAU,EAAE;AACRH,IAAAA,UAAU,EAAE,GADJ;AAERC,IAAAA,KAAK,EAAE,SAFC;AAGRG,IAAAA,UAAU,EAAE;AAHJ,GAZoB;AAiBhCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX;AAjBuB,CAAP,CAAD,CAA5B;AAuBA,MAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADgB,EAKhB;AACID,EAAAA,KAAK,EAAE,eADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALgB,EAShB;AACID,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATgB,EAahB;AACID,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAbgB,CAApB;AAmBA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAC7B,QAAM;AAAEf,IAAAA,MAAF;AAAUE,IAAAA,IAAV;AAAgBK,IAAAA,UAAhB;AAA4BE,IAAAA;AAA5B,MAAwCV,SAAS,EAAvD;AAEA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC;AAC/BmC,IAAAA,UAAU,EAAE,KADmB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GAAD,CAAlC;AAKA,QAAM;AAAED,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BH,KAAnC;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsC,iBAAiB,GAAG,MAAM;AAC5B,aAAOC,MAAM,CAACC,UAAP,GAAoB,GAApB,GACDL,QAAQ,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBL,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CADP,GAEDD,QAAQ,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBL,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CAFd;AAGH,KAJD;;AAKAE,IAAAA,iBAAiB;AACjBC,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,MAAMJ,iBAAiB,EAAzD;AACH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMK,cAAc,GAAG,MAAM;AACzB,wBAAO,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEhB,OAApB;AAAA,iBAA8BiB,QAA9B,eAAuC;AAAA,kBAAMC,cAAc;AAApB;AAAA;AAAA;AAAA;AAAA,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMC,gBAAgB,GAAG,MACrBZ,QAAQ,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBJ,MAAAA,UAAU,EAAE;AAA5B,KAAhB,CAAD,CADZ;;AAEA,UAAMW,iBAAiB,GAAG,MACtBb,QAAQ,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBJ,MAAAA,UAAU,EAAE;AAA5B,KAAhB,CAAD,CADZ;;AAEA,wBACI,QAAC,OAAD;AAAA,8BACI,QAAC,UAAD;AAEQY,QAAAA,IAAI,EAAE,OAFd;AAGQ1B,QAAAA,KAAK,EAAE,SAHf;AAIQ,sBAAc,MAJtB;AAKQ,yBAAiB,MALzB;AAMQ2B,QAAAA,OAAO,EAAEH,gBANjB;AAAA,+BASI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,MAAD;AACII,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,IAAI,EAAEf,UAFV;AAGIgB,QAAAA,OAAO,EAAEL,iBAHb;AAAA,+BAKI;AAAA,oBAAMM,gBAAgB;AAAtB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAmBI;AAAA,kBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH,GA5BD;;AA8BA,QAAMU,gBAAgB,GAAG,MAAM;AAC3B,WAAOxB,WAAW,CAACyB,GAAZ,CAAgB,CAAC;AAAExB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACxC,0BACI,QAAC,IAAD;AAEQwB,QAAAA,SAAS,EAAExC,UAFnB;AAGQyC,QAAAA,EAAE,EAAEzB,IAHZ;AAIQT,QAAAA,KAAK,EAAE,SAJf;AAKQmC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SALf;AAMQC,QAAAA,GAAG,EAAE7B,KANb;AAAA,+BASI,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAdM,CAAP;AAeH,GAhBD;;AAkBA,QAAMa,QAAQ,gBACV,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAExB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAIA,QAAMyB,cAAc,GAAG,MAAM;AACzB,WAAOf,WAAW,CAACyB,GAAZ,CAAgB,CAAC;AAAExB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACxC,0BACI,QAAC,MAAD;AACI4B,QAAAA,GAAG,EAAE7B,KADT;AAEIR,QAAAA,KAAK,EAAE,SAFX;AAGIkC,QAAAA,EAAE,EAAEzB,IAHR;AAIIwB,QAAAA,SAAS,EAAExC,UAJf;AAKI6C,QAAAA,SAAS,EAAEpC,UALf;AAAA,kBAMIM;AANJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVM,CAAP;AAWH,GAZD;;AAcA,QAAM+B,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AAAA;;AACnC,UAAMC,OAAO,GAAG7D,gBAAgB,EAAhC;AACA,wBACI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAf;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAuC,MAAA,EAAE,EAAE,CAAC6D,OAA5C;AAAA,gBAAsDD;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GALD;;AA1F6B,KA0FvBD,YA1FuB;AAAA,YA2FT3D,gBA3FS;AAAA;;AAiG7B,sBACI;AAAA,2BACI,QAAC,YAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEe,MAAnB;AAAA,kBAA4BkB,UAAU,GAAGU,aAAa,EAAhB,GAAqBH,cAAc;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAxGuBV,M;UAC0BhB,S;;;KAD1BgB,M","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { Slide, useScrollTrigger, Typography, AppBar, Toolbar, IconButton, Button, Hidden, Drawer, Menu, makeStyles, Link, MenuItem } from '@material-ui/core';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    header: {\r\n        backgroundColor: '#f03e3e',\r\n        'border-bottom': '4px solid #ffffff'\r\n\r\n    },\r\n    logo: {\r\n        fontFamily: \"Satisfy, sans-serif\",\r\n        fontWeight: 600,\r\n        color: '#ffffff',\r\n        textAlign: 'left',\r\n    },\r\n    menuButton: {\r\n        fontWeight: 400,\r\n        color: '#ffffff',\r\n        marginLeft: '10px'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));\r\n\r\nconst headersData = [\r\n    {\r\n        label: 'Home',\r\n        href: '\\/'\r\n    },\r\n    {\r\n        label: 'Announcements',\r\n        href: '\\Announcements'\r\n    },\r\n    {\r\n        label: 'Leaderboard',\r\n        href: '\\Leaderboard'\r\n    },\r\n    {\r\n        label: 'Rules',\r\n        href: '\\Rules'\r\n    }\r\n];\r\n\r\nexport default function Header() {\r\n    const { header, logo, menuButton, toolbar } = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false\r\n    });\r\n\r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 900\r\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n                : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        };\r\n        setResponsiveness();\r\n        window.addEventListener('resize', () => setResponsiveness());\r\n    }, []);\r\n\r\n    const displayDesktop = () => {\r\n        return <Toolbar className={toolbar}>{tdsbLogo}<div>{getMenuButtons()}</div></Toolbar>\r\n    };\r\n\r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n        return (\r\n            <Toolbar>\r\n                <IconButton\r\n                    {...{\r\n                        edge: 'start',\r\n                        color: 'inherit',\r\n                        'aria-label': 'menu',\r\n                        'aria-haspopup': 'true',\r\n                        onClick: handleDrawerOpen\r\n                    }}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Drawer {...{\r\n                    anchor: 'left',\r\n                    open: drawerOpen,\r\n                    onClose: handleDrawerClose\r\n                }}>\r\n                    <div>{getDrawerChoices()}</div>\r\n                </Drawer>\r\n                <div>{tdsbLogo}</div>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    const getDrawerChoices = () => {\r\n        return headersData.map(({ label, href }) => {\r\n            return (\r\n                <Link\r\n                    {...{\r\n                        component: RouterLink,\r\n                        to: href,\r\n                        color: \"inherit\",\r\n                        style: { textDecoration: \"none\" },\r\n                        key: label,\r\n                    }}\r\n                >\r\n                    <MenuItem>{label}</MenuItem>\r\n                </Link>\r\n            );\r\n        });\r\n    };\r\n\r\n    const tdsbLogo = (\r\n        <Typography variant=\"h4\" component=\"h1\" className={logo}>TDSB Chess Showdown</Typography>\r\n    );\r\n\r\n    const getMenuButtons = () => {\r\n        return headersData.map(({ label, href }) => {\r\n            return (\r\n                <Button {...{\r\n                    key: label,\r\n                    color: 'inherit',\r\n                    to: href,\r\n                    component: RouterLink,\r\n                    className: menuButton\r\n                }}>{label}</Button>\r\n            );\r\n        });\r\n    };\r\n\r\n    const HideOnScroll = ({ children }) => {\r\n        const trigger = useScrollTrigger();\r\n        return (\r\n            <Slide appear={false} direction='down' in={!trigger}>{children}</Slide>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <HideOnScroll>\r\n                <AppBar className={header}>{mobileView ? displayMobile() : displayDesktop()}</AppBar>\r\n            </HideOnScroll>\r\n        </header>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}